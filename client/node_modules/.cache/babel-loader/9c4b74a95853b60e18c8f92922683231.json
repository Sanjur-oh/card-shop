{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'; // from first demo\n// const initialStateValue = {username: \"\", email: \"\", name: \"\"}\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: ''\n}; // generates pending, fulfilled and rejected action types\n\nexport const fetchUsers = createAsyncThunk('user/fetchUsers', () => {\n  return axios.get(\"/users\").then(response => response.data);\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {});\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n      state.error = '';\n    });\n    builder.addCase(fetchUsers.rejected, (state, action) => {\n      state.loading = false;\n      state.users = [];\n      state.error = action;\n    });\n  }\n});\nexport const {\n  login,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer; // import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\n// import axios from 'axios'\n// // from first demo\n// // const initialStateValue = {username: \"\", email: \"\", name: \"\"}\n// const initialState = { loading: false, users: [], error: '', }\n// // generates pending, fulfilled and rejected action types\n// export const fetchUsers = createAsyncThunk('user/fetchUsers', () => {\n//     return axios\n//         .get(\"/users\")\n//         .then((response) => response.data)\n// })\n// const userSlice = createSlice({\n//     name: 'user',\n//     initialState: {value: initialState },\n//     reducers: {\n//         login: ( state, action ) => {\n//             state.value = action.payload\n//         }, \n//         logout: ( state ) => {\n//             state.value = initialState\n//         },\n//     },\n// })\n// export const {login, logout} = userSlice.actions\n// export default userSlice.reducer","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","loading","users","error","fetchUsers","get","then","response","data","userSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","login","logout","actions","reducer"],"sources":["/home/sanjuro/Development/code/phase-5/card-shop-project/client/src/features/userSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\n// from first demo\n// const initialStateValue = {username: \"\", email: \"\", name: \"\"}\n\nconst initialState = { loading: false, users: [], error: '', }\n\n// generates pending, fulfilled and rejected action types\nexport const fetchUsers = createAsyncThunk('user/fetchUsers', () => {\n    return axios\n        .get(\"/users\")\n        .then((response) => response.data)\n})\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    extraReducers: (builder) => {\n        builder.addCase(fetchUsers.pending, (state) => {})\n        builder.addCase(fetchUsers.fulfilled, (state, action) => {\n            state.loading = false\n            state.users = action.payload\n            state.error = ''\n        })\n        builder.addCase(fetchUsers.rejected, (state, action) => {\n            state.loading = false\n            state.users = []\n            state.error = action\n        })\n    },\n})\n\nexport const {login, logout} = userSlice.actions\n\nexport default userSlice.reducer\n\n\n\n\n\n\n\n\n\n\n// import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\n// import axios from 'axios'\n\n// // from first demo\n// // const initialStateValue = {username: \"\", email: \"\", name: \"\"}\n\n// const initialState = { loading: false, users: [], error: '', }\n\n// // generates pending, fulfilled and rejected action types\n// export const fetchUsers = createAsyncThunk('user/fetchUsers', () => {\n//     return axios\n//         .get(\"/users\")\n//         .then((response) => response.data)\n// })\n\n// const userSlice = createSlice({\n//     name: 'user',\n//     initialState: {value: initialState },\n//     reducers: {\n//         login: ( state, action ) => {\n//             state.value = action.payload\n//         }, \n        \n//         logout: ( state ) => {\n//             state.value = initialState\n//         },\n//     },\n// })\n\n// export const {login, logout} = userSlice.actions\n\n// export default userSlice.reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,KAAX;EAAkBC,KAAK,EAAE,EAAzB;EAA6BC,KAAK,EAAE;AAApC,CAArB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,iBAAD,EAAoB,MAAM;EAChE,OAAOC,KAAK,CACPM,GADE,CACE,QADF,EAEFC,IAFE,CAEIC,QAAD,IAAcA,QAAQ,CAACC,IAF1B,CAAP;AAGH,CAJyC,CAAnC;AAMP,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC1Ba,IAAI,EAAE,MADoB;EAE1BV,YAF0B;EAG1BW,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACU,OAA3B,EAAqCC,KAAD,IAAW,CAAE,CAAjD;IACAH,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACY,SAA3B,EAAsC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACrDF,KAAK,CAACd,OAAN,GAAgB,KAAhB;MACAc,KAAK,CAACb,KAAN,GAAce,MAAM,CAACC,OAArB;MACAH,KAAK,CAACZ,KAAN,GAAc,EAAd;IACH,CAJD;IAKAS,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACe,QAA3B,EAAqC,CAACJ,KAAD,EAAQE,MAAR,KAAmB;MACpDF,KAAK,CAACd,OAAN,GAAgB,KAAhB;MACAc,KAAK,CAACb,KAAN,GAAc,EAAd;MACAa,KAAK,CAACZ,KAAN,GAAcc,MAAd;IACH,CAJD;EAKH;AAfyB,CAAD,CAA7B;AAkBA,OAAO,MAAM;EAACG,KAAD;EAAQC;AAAR,IAAkBZ,SAAS,CAACa,OAAlC;AAEP,eAAeb,SAAS,CAACc,OAAzB,C,CAWA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}